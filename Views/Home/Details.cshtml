@model email_alerts.Models.EmailAlerts.Query

@{
    ViewData["Title"] = Model.Description;

    var messageFormatOptions = new Dictionary<int, string>
    {
        { 0, "HTML" },
        { 1, "Plain text" }
    };

    var receiverTypeOptions = new Dictionary<int, string>
    {
        { 0, "Responsible" },
        { 1, "Responsible & Main user" },
        { 2, "Local admins" }
    };
}

<style>
    .select-arrow {
        position: relative;
    }

    .select-arrow::after {
        content: '▼';
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        pointer-events: none;
    }

    .select-arrow select {
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        padding-right: 30px;
    }
</style>

<div class="container">
    <h2>@Model.Description</h2>
    <form id="detailsForm" method="post" action="@Url.Action("Edit", "Home")">
        <input type="hidden" name="id" value="@Model.id" />
        <div class="form-group">
            <label>Description</label>
            <textarea class="form-control" rows="3" name="Description" readonly>@Model.Description</textarea>
        </div>
        <div class="form-group">
            <label>Timeout (seconds)</label>
            <input type="text" class="form-control" name="Timeout" value="@Model.Timeout" readonly />
        </div>
        <div class="form-group">
            <label>Notification Period (days)</label>
            <input type="text" class="form-control" name="Period" value="@Model.Period" readonly />
        </div>
        <div class="form-group">
            <label>Active</label>
            @*<input type="hidden" name="Active" value="false" />*@
            <input type="checkbox" class="form-check-input" name="Active" value="true" @(Model.Active ? "checked" : "") disabled />
        </div>
        <div class="form-group">
            <label>Alert SQL Text</label>
            <textarea class="form-control" rows="5" name="Text" readonly>@Model.Text</textarea>
        </div>
        <div class="form-group">
            <label>Mail Subject</label>
            <input type="text" class="form-control" name="Subject" value="@Model.Subject" readonly />
        </div>
        <div class="form-group select-arrow">
            <label>Receiver Type</label>
            <select class="form-control" name="ReceiverType" disabled>
                @foreach (var option in receiverTypeOptions)
                {
                    if (Model.ReceiverType == option.Key)
                    {
                        <option value="@option.Key" selected>@option.Value</option>
                    }
                    else
                    {
                        <option value="@option.Key">@option.Value</option>
                    }
                }
                @if (!receiverTypeOptions.ContainsKey(Model.ReceiverType ?? -1))
                {
                    <option value="" selected>Unsupported type</option>
                }
            </select>
        </div>
        <div class="form-group select-arrow">
            <label>Message Format</label>
            <select class="form-control" name="MessageFormat" disabled>
                @foreach (var option in messageFormatOptions)
                {
                    if (Model.MessageFormat == option.Key)
                    {
                        <option value="@option.Key" selected>@option.Value</option>
                    }
                    else
                    {
                        <option value="@option.Key">@option.Value</option>
                    }
                }
                @if (!messageFormatOptions.ContainsKey(Model.MessageFormat))
                {
                    <option value="" selected>Unsupported format</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label>Mail body template</label>
            <textarea class="form-control" rows="5" name="Body" readonly>@Model.Body</textarea>
        </div>
        <div class="form-group">
            <button type="button" class="btn btn-primary" id="editButton" onclick="enableEditing()">Edit</button>
            <button type="submit" class="btn btn-success" id="saveButton" style="display:none;">Save</button>
            <button type="button" class="btn btn-secondary" id="cancelButton" style="display:none;" onclick="cancelEditing()">Cancel</button>
            <a class="btn btn-secondary" asp-action="Index">Back to List</a>
        </div>
    </form>
</div>

@section Scripts {
    <script type="text/javascript">
        function enableEditing() {
            $('textarea, input[type="text"]').prop('readonly', false);
            $('input[type="checkbox"]').prop('disabled', false);
            $('select[name="ReceiverType"]').prop('disabled', false);
            $('select[name="MessageFormat"]').prop('disabled', false);
            $('#editButton').hide();
            $('#saveButton').show();
            $('#cancelButton').show();
        }

        function cancelEditing() {
            $('textarea, input[type="text"]').prop('readonly', true);
            $('input[type="checkbox"]').prop('disabled', true);
            $('select[name="ReceiverType"]').prop('disabled', true);
            $('select[name="MessageFormat"]').prop('disabled', true);
            $('#editButton').show();
            $('#saveButton').hide();
            $('#cancelButton').hide();
            // Optionally, you can reload the page to reset the form
            location.reload();
        }
    </script>
}
